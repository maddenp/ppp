#!/usr/bin/env ruby

basedir=File.dirname(File.expand_path($0))
$: << basedir
$: << File.join(basedir,"lib")

# order of requires matters

require "translator"
require "sms"

include Translator

def unpack(props,args)
  props[:incdirs]=["."]
  args.reverse!
  while opt=args.pop
    case opt
    when "-I"
      dirlist=args.pop
      fail(usage) unless dirlist
      dirlist.split(":").each do |d|
        fail("No such directory: #{d}") unless File.directory?(d)
        props[:incdirs] << d
      end
    when "normalize"
      props[:normalize]=true
    when "debug"
      props[:debug]=true
    else
      fail(usage)
    end
  end
  props
end

def usage
  f=File.basename(__FILE__)
  "usage: #{f} [-I dir[:dir:...]] source"
end

if (__FILE__==$0)
  fail(usage) unless srcfile=ARGV.pop
  srcfile=File.expand_path(srcfile)
  fail("Cannot read file: #{srcfile}") unless File.readable?(srcfile)
  s=File.open(srcfile,"rb").read
  props={:srcfile=>srcfile}
  props=unpack(props,ARGV)
  puts out(s,:program_units,props)
end

# paul.a.madden@noaa.gov
